# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: library/grpc/health/health.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2

DESCRIPTOR = _descriptor.FileDescriptor(
  name='library/grpc/health/health.proto',
  package='tekone.library.grpc.health',
  syntax='proto3',
  serialized_options=b'Z*go.tekoapis.com/tekone/library/grpc/health',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n library/grpc/health/health.proto\x12\x1atekone.library.grpc.health\x1a\x1cgoogle/api/annotations.proto\"\x11\n\x0fLivenessRequest\"\x12\n\x10ReadinessRequest\",\n\x10LivenessResponse\x12\x18\n\x07\x63ontent\x18\x01 \x01(\tR\x07\x63ontent\"-\n\x11ReadinessResponse\x12\x18\n\x07\x63ontent\x18\x01 \x01(\tR\x07\x63ontent2\x92\x02\n\x12HealthCheckService\x12{\n\x08Liveness\x12+.tekone.library.grpc.health.LivenessRequest\x1a,.tekone.library.grpc.health.LivenessResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/health/live\x12\x7f\n\tReadiness\x12,.tekone.library.grpc.health.ReadinessRequest\x1a-.tekone.library.grpc.health.ReadinessResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/health/readyB,Z*go.tekoapis.com/tekone/library/grpc/healthb\x06proto3'
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR, ])

_LIVENESSREQUEST = _descriptor.Descriptor(
  name='LivenessRequest',
  full_name='tekone.library.grpc.health.LivenessRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=94,
  serialized_end=111,
)

_READINESSREQUEST = _descriptor.Descriptor(
  name='ReadinessRequest',
  full_name='tekone.library.grpc.health.ReadinessRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=113,
  serialized_end=131,
)

_LIVENESSRESPONSE = _descriptor.Descriptor(
  name='LivenessResponse',
  full_name='tekone.library.grpc.health.LivenessResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='tekone.library.grpc.health.LivenessResponse.content', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='content', file=DESCRIPTOR, create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=133,
  serialized_end=177,
)

_READINESSRESPONSE = _descriptor.Descriptor(
  name='ReadinessResponse',
  full_name='tekone.library.grpc.health.ReadinessResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='tekone.library.grpc.health.ReadinessResponse.content', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='content', file=DESCRIPTOR, create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=179,
  serialized_end=224,
)

DESCRIPTOR.message_types_by_name['LivenessRequest'] = _LIVENESSREQUEST
DESCRIPTOR.message_types_by_name['ReadinessRequest'] = _READINESSREQUEST
DESCRIPTOR.message_types_by_name['LivenessResponse'] = _LIVENESSRESPONSE
DESCRIPTOR.message_types_by_name['ReadinessResponse'] = _READINESSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LivenessRequest = _reflection.GeneratedProtocolMessageType('LivenessRequest', (_message.Message,), {
  'DESCRIPTOR': _LIVENESSREQUEST,
  '__module__': 'library.grpc.health.health_pb2'
  # @@protoc_insertion_point(class_scope:tekone.library.grpc.health.LivenessRequest)
})
_sym_db.RegisterMessage(LivenessRequest)

ReadinessRequest = _reflection.GeneratedProtocolMessageType('ReadinessRequest', (_message.Message,), {
  'DESCRIPTOR': _READINESSREQUEST,
  '__module__': 'library.grpc.health.health_pb2'
  # @@protoc_insertion_point(class_scope:tekone.library.grpc.health.ReadinessRequest)
})
_sym_db.RegisterMessage(ReadinessRequest)

LivenessResponse = _reflection.GeneratedProtocolMessageType('LivenessResponse', (_message.Message,), {
  'DESCRIPTOR': _LIVENESSRESPONSE,
  '__module__': 'library.grpc.health.health_pb2'
  # @@protoc_insertion_point(class_scope:tekone.library.grpc.health.LivenessResponse)
})
_sym_db.RegisterMessage(LivenessResponse)

ReadinessResponse = _reflection.GeneratedProtocolMessageType('ReadinessResponse', (_message.Message,), {
  'DESCRIPTOR': _READINESSRESPONSE,
  '__module__': 'library.grpc.health.health_pb2'
  # @@protoc_insertion_point(class_scope:tekone.library.grpc.health.ReadinessResponse)
})
_sym_db.RegisterMessage(ReadinessResponse)

DESCRIPTOR._options = None

_HEALTHCHECKSERVICE = _descriptor.ServiceDescriptor(
  name='HealthCheckService',
  full_name='tekone.library.grpc.health.HealthCheckService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=227,
  serialized_end=501,
  methods=[
    _descriptor.MethodDescriptor(
      name='Liveness',
      full_name='tekone.library.grpc.health.HealthCheckService.Liveness',
      index=0,
      containing_service=None,
      input_type=_LIVENESSREQUEST,
      output_type=_LIVENESSRESPONSE,
      serialized_options=b'\202\323\344\223\002\016\022\014/health/live',
      create_key=_descriptor._internal_create_key,
    ),
    _descriptor.MethodDescriptor(
      name='Readiness',
      full_name='tekone.library.grpc.health.HealthCheckService.Readiness',
      index=1,
      containing_service=None,
      input_type=_READINESSREQUEST,
      output_type=_READINESSRESPONSE,
      serialized_options=b'\202\323\344\223\002\017\022\r/health/ready',
      create_key=_descriptor._internal_create_key,
    ),
  ])
_sym_db.RegisterServiceDescriptor(_HEALTHCHECKSERVICE)

DESCRIPTOR.services_by_name['HealthCheckService'] = _HEALTHCHECKSERVICE

# @@protoc_insertion_point(module_scope)
